name: SonarQube Analysis

on:
  push:  # Trigger on push to any branch
  pull_request:  # Trigger on pull request to any branch

jobs:
  sonarQube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./src/go.mod

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Java version
        run: java -version

      - name: Set JAVA_HOME environment variable
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV


      - name: Install SonarQube Scanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.0.2311-linux.zip
          unzip sonar-scanner.zip -d $HOME
#          export PATH="$HOME/sonar-scanner-4.6.0.2311-linux/bin:$PATH"
#          echo "$HOME/sonar-scanner-4.6.0.2311-linux/bin" >> $GITHUB_PATH
#          echo "export JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.17-7/x64" >> $GITHUB_ENV
#          echo "export PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
    

      - name: Run tests and generate coverage
        run: |
          cd src
          go test -v ./... -coverprofile=coverage.out
          cat coverage.out
          go tool cover -func=coverage.out

      - name: SonarQube Scan
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
          SONAR_TOKEN: ${{ secrets.SFTP_INGESTION_SONAR_TOKEN }}
        run: |
          cd src/
          echo "sonar properties here"
          cat /home/runner/sonar-scanner-4.6.2.2472-linux/conf/sonar-scanner.properties
          sonar-scanner \
            -Dsonar.projectKey=CDCgov_reportstream-sftp-ingestion \
            -Dsonar.organization=cdcgov \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.sources=. \
            -Dsonar.tests=. \
            -Dsonar.go.coverage.reportPaths=coverage.out
          
