name: 'Container Build & Deploy'

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      REGISTRY:
        required: true
        type: string
      REPO:
        required: true
        type: string
      APP:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true


jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.ENVIRONMENT }}
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version-file: ./src/go.mod
        cache-dependency-path: ./src/go.sum

    - name: Compile
      run: make compile

    - name: Login via Azure CLI
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Retrieve registry password
      id: retrieve-registry-password
      uses: azure/CLI@v2
      with:
        inlineScript: |
          ACR_PASSWORD=$(az acr login --name ${{ inputs.REGISTRY }} --expose-token --output tsv --query accessToken)
          echo "::add-mask::$ACR_PASSWORD"
          echo "ACR_PASSWORD=$ACR_PASSWORD" >> "$GITHUB_OUTPUT"

    - name: Log in to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.REGISTRY }}
        username: 00000000-0000-0000-0000-000000000000
        password: ${{ steps.retrieve-registry-password.outputs.ACR_PASSWORD }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: '${{ inputs.REGISTRY }}/${{ inputs.REPO }}:${{ github.sha }}'
        file: ./Dockerfile
        context: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ inputs.ENVIRONMENT }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Login via Azure CLI
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ inputs.APP }}
        slot-name: production
        images: '${{ inputs.REGISTRY }}/${{ inputs.REPO }}:${{ github.sha }}'

  function-deploy:
    name: Function Deploy
    needs: terraform-deploy
    uses: ./.github/workflows/functions-deploy.yml
    with:
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
