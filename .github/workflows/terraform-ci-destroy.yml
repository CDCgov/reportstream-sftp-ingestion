name: Terraform CI Destroy

on:
  pull_request:
    types:
      - closed

jobs:

  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      operations: ${{ steps.filter.outputs.operations }}

    steps:

      - uses: actions/checkout@v4

      # keep in sync with terraform-ci-deploy.yml
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            operations:
              - 'operations/environments/pr/**'
              - 'operations/template/**'

  destroy-environment:
    name: Destroy PR Environment
    environment:
      name: pr
    needs:
      - paths-filter
    if: needs.paths-filter.outputs.operations == 'true'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: operations/environments/pr

    steps:

      - uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init -backend-config="key=pr_${{ github.event.number }}.tfstate"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var="pr_number=${{ github.event.number }}"
