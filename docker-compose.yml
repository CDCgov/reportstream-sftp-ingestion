version: "3.7"
services:
  rs-sftp-ingestion-service:
    build: .
    environment:
      AZURE_STORAGE_CONNECTION_STRING: DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://sftp-Azurite:10000/devstoreaccount1;QueueEndpoint=http://sftp-Azurite:10001/devstoreaccount1; # pragma: allowlist secret
      ENV: local
      # Uncomment the line below to call local report stream. Otherwise we'll use a mock response
      # REPORT_STREAM_URL_PREFIX: http://host.docker.internal:7071
      FLEXION_PRIVATE_KEY_NAME: trusted-intermediary-private-key-local.pem #pragma: allowlist secret
      FLEXION_CLIENT_NAME: flexion.simulated-hospital
      QUEUE_MAX_DELIVERY_ATTEMPTS: 5
      SFTP_USER: ti_user
      SFTP_PASSWORD: ti_password #pragma: allowlist secret
      SFTP_KEY_NAME: sftp_server_user_id_rsa.pem #pragma: allowlist secret
      SFTP_SERVER_ADDRESS: host.docker.internal:2223 # no http since this is sftp
      SFTP_SERVER_PUBLIC_KEY_NAME: ssh_host_rsa_key.pub
      CA_DPH_ZIP_PASSWORD_NAME: mock_ca_dph_zip_password.txt #pragma: allowlist secret
      POLLING_TRIGGER_QUEUE_NAME: polling-trigger-queue
    volumes:
      # map to Azurite data objects to the build directory
      - ./localdata/data/reportstream:/localdata
      - ./mock_credentials:/mock_credentials
    ports:
      - "8081:8080" # default api endpoint port
    platform: linux/amd64
    depends_on:
      sftp-Azurite:
        condition: service_started
      azure-cli:
        condition: service_completed_successfully
      sftp-server:
        condition: service_started
    networks:
      - sftp

  sftp-Azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    # uncomment the line below to skip x-ms-version checks
    # command: azurite --skipApiVersionCheck --blobHost 0.0.0.0 --queueHost 0.0.0.0
    volumes:
      # map to Azurite data objects to the build directory
      - ./localdata/data/azurite:/data
    ports:
      - "12000:10000"
      - "12001:10001"
      - "12002:10002"
    networks:
      - sftp

  azure-cli:
    image: mcr.microsoft.com/azure-cli
    volumes:
      - ./mock_data:/mock_data
    command:
      - /bin/sh
      - -c
      - |
        az storage container create -n sftp
        az storage blob upload --overwrite --account-name devstoreaccount1 --container-name sftp --name order_message.hl7 --file mock_data/order_message.hl7
        az storage queue create -n message-import-queue
        az storage queue create -n message-import-dead-letter-queue
        az storage queue create -n polling-trigger-queue
        az storage queue create -n polling-trigger-dead-letter-queue
    environment:
      AZURE_STORAGE_CONNECTION_STRING: DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://sftp-Azurite:10000/devstoreaccount1;QueueEndpoint=http://sftp-Azurite:10001/devstoreaccount1; # pragma: allowlist secret
    networks:
      - sftp
    depends_on:
      - sftp-Azurite

  sftp-server:
    image: atmoz/sftp
    environment:
      SFTP_USERS: ti_user:ti_password:::files
    volumes:
      - ./mock_credentials/sftp_server_user.pub:/home/ti_user/.ssh/keys/id_rsa.pub:ro
      - ./mock_credentials/ssh_host_rsa_key:/etc/ssh/ssh_host_rsa_key
      - ./localdata/sftp_server_require_password_and_publickey.sh:/etc/sftp.d/sftp_server_require_password_and_publickey.sh
      - ./localdata/data/sftp:/home/ti_user/files
    ports:
      - "2223:22"
    networks:
      - sftp

networks:
  sftp:
